{"dependencies": [{"name": "flask", "version": "2.3.3", "vulns": []}, {"name": "flask-sqlalchemy", "version": "3.0.5", "vulns": []}, {"name": "flask-migrate", "version": "4.0.5", "vulns": []}, {"name": "flask-login", "version": "0.6.3", "vulns": []}, {"name": "flask-wtf", "version": "1.1.1", "vulns": []}, {"name": "wtforms", "version": "3.0.1", "vulns": []}, {"name": "flask-cors", "version": "6.0.1", "vulns": []}, {"name": "psycopg2-binary", "version": "2.9.7", "vulns": []}, {"name": "pyjwt", "version": "2.8.0", "vulns": []}, {"name": "werkzeug", "version": "2.3.7", "vulns": [{"id": "PYSEC-2023-221", "fix_versions": ["2.3.8", "3.0.1"], "aliases": ["CVE-2023-46136", "GHSA-hrfv-mqp8-q5rw"], "description": "Werkzeug is a comprehensive WSGI web application library. If an upload of a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. This vulnerability has been patched in version 3.0.1."}, {"id": "GHSA-2g68-c3qc-8985", "fix_versions": ["3.0.3"], "aliases": ["CVE-2024-34069"], "description": "The debugger in affected versions of Werkzeug can allow an attacker to execute code on a developer's machine under some circumstances. This requires the attacker to get the developer to interact with a domain and subdomain they control, and enter the debugger PIN, but if they are successful it allows access to the debugger even if it is only running on localhost. This also requires the attacker to guess a URL in the developer's application that will trigger the debugger."}, {"id": "GHSA-f9vj-2wh5-fj8j", "fix_versions": ["3.0.6"], "aliases": ["CVE-2024-49766"], "description": "On Python < 3.11 on Windows, `os.path.isabs()` does not catch UNC paths like `//server/share`. Werkzeug's `safe_join()` relies on this check, and so can produce a path that is not safe, potentially allowing unintended access to data. Applications using Python >= 3.11, or not using Windows, are not vulnerable."}, {"id": "GHSA-q34m-jh98-gwm2", "fix_versions": ["3.0.6"], "aliases": ["CVE-2024-49767"], "description": "Applications using Werkzeug to parse `multipart/form-data` requests are vulnerable to resource exhaustion. A specially crafted form body can bypass the `Request.max_form_memory_size` setting.   The `Request.max_content_length` setting, as well as resource limits provided by deployment software and platforms, are also available to limit the resources used during a request. This vulnerability does not affect those settings. All three types of limits should be considered and set appropriately when deploying an application."}]}, {"name": "celery", "version": "5.3.1", "vulns": []}, {"name": "redis", "version": "4.6.0", "vulns": []}, {"name": "gunicorn", "version": "21.2.0", "vulns": [{"id": "GHSA-w3h3-4rj7-4ph4", "fix_versions": ["22.0.0"], "aliases": ["CVE-2024-1135"], "description": "Gunicorn fails to properly validate Transfer-Encoding headers, leading to HTTP Request Smuggling (HRS) vulnerabilities. By crafting requests with conflicting Transfer-Encoding headers, attackers can bypass security restrictions and access restricted endpoints. This issue is due to Gunicorn's handling of Transfer-Encoding headers, where it incorrectly processes requests with multiple, conflicting Transfer-Encoding headers, treating them as chunked regardless of the final encoding specified. This vulnerability has been shown to allow access to endpoints restricted by gunicorn. This issue has been addressed in version 22.0.0.  To be affected users must have a network path which does not filter out invalid requests. These users are advised to block access to restricted endpoints via a firewall or other mechanism if they are unable to update."}, {"id": "GHSA-hc5x-x2vx-497g", "fix_versions": ["23.0.0"], "aliases": ["CVE-2024-6827"], "description": "Gunicorn version 21.2.0 does not properly validate the value of the 'Transfer-Encoding' header as specified in the RFC standards, which leads to the default fallback method of 'Content-Length,' making it vulnerable to TE.CL request smuggling. This vulnerability can lead to cache poisoning, data exposure, session manipulation, SSRF, XSS, DoS, data integrity compromise, security bypass, information leakage, and business logic abuse."}]}, {"name": "flask-talisman", "version": "1.1.0", "vulns": []}, {"name": "flask-limiter", "version": "3.5.0", "vulns": []}, {"name": "python-dotenv", "version": "1.0.0", "vulns": []}, {"name": "requests", "version": "2.31.0", "vulns": [{"id": "GHSA-9wx4-h78v-vm56", "fix_versions": ["2.32.0"], "aliases": ["CVE-2024-35195"], "description": "When making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same origin will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool.  ### Remediation Any of these options can be used to remediate the current issue, we highly recommend upgrading as the preferred mitigation.  * Upgrade to `requests>=2.32.0`. * For `requests<2.32.0`, avoid setting `verify=False` for the first request to a host while using a Requests Session. * For `requests<2.32.0`, call `close()` on `Session` objects to clear existing connections if `verify=False` is used.  ### Related Links * https://github.com/psf/requests/pull/6655"}, {"id": "GHSA-9hjg-9r4m-mvj7", "fix_versions": ["2.32.4"], "aliases": ["CVE-2024-47081"], "description": "### Impact  Due to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs.  ### Workarounds For older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on your Requests Session ([docs](https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env)).  ### References https://github.com/psf/requests/pull/6965 https://seclists.org/fulldisclosure/2025/Jun/2"}]}, {"name": "pytest", "version": "7.4.2", "vulns": []}, {"name": "pytest-flask", "version": "1.2.0", "vulns": []}, {"name": "billiard", "version": "4.2.1", "vulns": []}, {"name": "charset-normalizer", "version": "3.4.2", "vulns": []}, {"name": "click", "version": "8.2.1", "vulns": []}, {"name": "idna", "version": "3.10", "vulns": []}, {"name": "kombu", "version": "5.5.4", "vulns": []}, {"name": "vine", "version": "5.1.0", "vulns": []}, {"name": "amqp", "version": "5.3.1", "vulns": []}, {"name": "ordered-set", "version": "4.1.0", "vulns": []}, {"name": "pluggy", "version": "1.6.0", "vulns": []}, {"name": "rich", "version": "13.9.4", "vulns": []}, {"name": "pygments", "version": "2.19.1", "vulns": []}, {"name": "urllib3", "version": "2.5.0", "vulns": []}, {"name": "alembic", "version": "1.16.2", "vulns": []}, {"name": "blinker", "version": "1.9.0", "vulns": []}, {"name": "certifi", "version": "2025.6.15", "vulns": []}, {"name": "click-didyoumean", "version": "0.3.1", "vulns": []}, {"name": "click-plugins", "version": "1.1.1", "vulns": []}, {"name": "click-repl", "version": "0.3.0", "vulns": []}, {"name": "itsdangerous", "version": "2.2.0", "vulns": []}, {"name": "jinja2", "version": "3.1.6", "vulns": []}, {"name": "limits", "version": "5.4.0", "vulns": []}, {"name": "packaging", "version": "25.0", "vulns": []}, {"name": "deprecated", "version": "1.2.18", "vulns": []}, {"name": "wrapt", "version": "1.17.2", "vulns": []}, {"name": "markdown-it-py", "version": "3.0.0", "vulns": []}, {"name": "mdurl", "version": "0.1.2", "vulns": []}, {"name": "markupsafe", "version": "3.0.2", "vulns": []}, {"name": "prompt-toolkit", "version": "3.0.51", "vulns": []}, {"name": "python-dateutil", "version": "2.9.0.post0", "vulns": []}, {"name": "six", "version": "1.17.0", "vulns": []}, {"name": "sqlalchemy", "version": "2.0.41", "vulns": []}, {"name": "greenlet", "version": "3.2.3", "vulns": []}, {"name": "typing-extensions", "version": "4.14.0", "vulns": []}, {"name": "tzdata", "version": "2025.2", "vulns": []}, {"name": "iniconfig", "version": "2.1.0", "vulns": []}, {"name": "mako", "version": "1.3.10", "vulns": []}, {"name": "wcwidth", "version": "0.2.13", "vulns": []}], "fixes": []}
