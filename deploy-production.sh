#!/bin/bash

# BaiMuras Platform Production Deployment Script
# –°–µ—Ä–≤–µ—Ä: 95.140.153.181
# –î–æ–º–µ–Ω: baimuras.space

set -e

echo "üöÄ –ù–ê–ß–ê–õ–û –î–ï–ü–õ–û–Ø –ü–õ–ê–¢–§–û–†–ú–´ BAIMURAS"
echo "=================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if [ ! -f ".env.prod" ]; then
        error "–§–∞–π–ª .env.prod –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    fi
    
    source .env.prod
    
    if [ -z "$POSTGRES_PASSWORD" ]; then
        error "POSTGRES_PASSWORD –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env.prod"
    fi
    
    if [ -z "$SECRET_KEY" ]; then
        error "SECRET_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env.prod"
    fi
    
    log "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã ‚úì"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    mkdir -p uploads
    mkdir -p logs
    mkdir -p nginx/ssl
    mkdir -p backups
    mkdir -p static
    
    log "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã ‚úì"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
check_docker() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
    
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    fi
    
    log "Docker –ø—Ä–æ–≤–µ—Ä–µ–Ω ‚úì"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
stop_existing() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    docker-compose -f docker-compose.prod.yml down --remove-orphans || true
    
    log "–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã ‚úì"
}

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
build_images() {
    log "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
    
    docker-compose -f docker-compose.prod.yml build --no-cache
    
    log "–û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã ‚úì"
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
start_services() {
    log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ Redis
    docker-compose -f docker-compose.prod.yml up -d postgres redis
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
    sleep 30
    
    # –ó–∞–ø—É—Å–∫ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    docker-compose -f docker-compose.prod.yml up -d flask_app
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Flask
    info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Flask..."
    sleep 20
    
    # –ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
    docker-compose -f docker-compose.prod.yml up -d admin_panel
    
    # –ó–∞–ø—É—Å–∫ n8n
    docker-compose -f docker-compose.prod.yml up -d n8n
    
    # –ó–∞–ø—É—Å–∫ Nginx
    docker-compose -f docker-compose.prod.yml up -d nginx
    
    log "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã ‚úì"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
health_check() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Flask API
    if curl -f http://localhost:5000/health > /dev/null 2>&1; then
        log "Flask API —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úì"
    else
        warning "Flask API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Admin Panel
    if curl -f http://localhost:3000 > /dev/null 2>&1; then
        log "Admin Panel —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úì"
    else
        warning "Admin Panel –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ n8n
    if curl -f http://localhost:5678 > /dev/null 2>&1; then
        log "n8n —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úì"
    else
        warning "n8n –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
create_backup() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞..."
    
    BACKUP_DATE=$(date +%Y%m%d_%H%M%S)
    BACKUP_DIR="backups/backup_$BACKUP_DATE"
    
    mkdir -p "$BACKUP_DIR"
    
    # –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    docker exec baimuras_postgres pg_dump -U baimuras_user baimuras_db > "$BACKUP_DIR/database.sql"
    
    # –ë—ç–∫–∞–ø —Ñ–∞–π–ª–æ–≤
    tar -czf "$BACKUP_DIR/uploads.tar.gz" uploads/ || true
    tar -czf "$BACKUP_DIR/logs.tar.gz" logs/ || true
    
    log "–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤ $BACKUP_DIR ‚úì"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL (Let's Encrypt)
setup_ssl() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
    
    if [ ! -f "nginx/ssl/baimuras.space.crt" ]; then
        warning "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Let's Encrypt –≤—Ä—É—á–Ω—É—é."
        info "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL:"
        info "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ certbot: apt install certbot python3-certbot-nginx"
        info "2. –ü–æ–ª—É—á–∏—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: certbot --nginx -d baimuras.space -d admin.baimuras.space -d api.baimuras.space -d n8n.baimuras.space"
    else
        log "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞–π–¥–µ–Ω—ã ‚úì"
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
show_status() {
    log "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    docker-compose -f docker-compose.prod.yml ps
    
    echo ""
    log "–î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
    info "üåê –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç: https://baimuras.space"
    info "üë®‚Äçüíº –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: https://admin.baimuras.space"
    info "üîß API: https://api.baimuras.space"
    info "ü§ñ n8n: https://n8n.baimuras.space"
    
    echo ""
    log "–õ–æ–≥–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥–æ–π:"
    info "docker-compose -f docker-compose.prod.yml logs -f [service_name]"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è
main() {
    log "–ù–∞—á–∞–ª–æ –¥–µ–ø–ª–æ—è BaiMuras Platform..."
    
    check_env
    create_directories
    check_docker
    stop_existing
    build_images
    start_services
    health_check
    create_backup
    setup_ssl
    show_status
    
    echo ""
    log "üéâ –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!"
    log "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ BaiMuras –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ –Ω–∞ baimuras.space"
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
