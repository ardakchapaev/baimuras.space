# BaiMuras Platform Environment Variables
# Скопируйте этот файл в .env и заполните необходимые значения

# =============================================================================
# ОБЯЗАТЕЛЬНЫЕ ПЕРЕМЕННЫЕ (должны быть установлены)
# =============================================================================

# Секретные ключи (генерируйте случайные строки длиной 32+ символа)
SECRET_KEY=your-super-secret-key-here-32-chars-minimum
JWT_SECRET_KEY=your-jwt-secret-key-here-32-chars-minimum

# =============================================================================
# ПЕРЕМЕННЫЕ БАЗЫ ДАННЫХ
# =============================================================================

# Тип базы данных: sqlite, postgresql
DATABASE_TYPE=sqlite

# Для SQLite (по умолчанию для разработки)
DATABASE_PATH=instance/baimuras.db

# Для PostgreSQL (продакшн)
# DATABASE_USER=baimuras_user
# DATABASE_PASSWORD=secure_password
# DATABASE_NAME=baimuras_db
# DATABASE_HOST=localhost
# DATABASE_PORT=5432

# =============================================================================
# НАСТРОЙКИ REDIS
# =============================================================================

REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
# REDIS_PASSWORD=redis_password_if_needed

# =============================================================================
# НАСТРОЙКИ ПОЧТЫ
# =============================================================================

MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=True
MAIL_USERNAME=your-email@gmail.com
MAIL_PASSWORD=your-app-password

# =============================================================================
# НАСТРОЙКИ CELERY
# =============================================================================

CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# =============================================================================
# ИНТЕГРАЦИИ
# =============================================================================

# N8N Webhook URL для автоматизации
N8N_WEBHOOK_URL=https://your-n8n-instance.com/webhook/your-webhook-id

# API ключи для внешних сервисов
# API_KEY=your-api-key-for-external-services
# WEBHOOK_SECRET_KEY=webhook-signature-verification-key

# =============================================================================
# НАСТРОЙКИ ПРИЛОЖЕНИЯ
# =============================================================================

# Среда выполнения: development, production, testing
FLASK_ENV=development

# Режим отладки: True, False
DEBUG=True

# Тестирование: True, False
TESTING=False

# =============================================================================
# НАСТРОЙКИ БЕЗОПАСНОСТИ (для продакшн)
# =============================================================================

# Максимальное количество запросов в минуту/час
MAX_REQUESTS_PER_MINUTE=60
MAX_REQUESTS_PER_HOUR=1000

# Время блокировки подозрительных IP (в минутах)
BLOCK_DURATION_MINUTES=15

# =============================================================================
# ЛОГИРОВАНИЕ
# =============================================================================

# Уровень логирования: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# =============================================================================
# ИНСТРУКЦИИ ПО ГЕНЕРАЦИИ СЕКРЕТНЫХ КЛЮЧЕЙ
# =============================================================================

# Для генерации секретных ключей используйте:
# python -c "import secrets; print(secrets.token_urlsafe(32))"

# Или в Python:
# import secrets
# print("SECRET_KEY=" + secrets.token_urlsafe(32))
# print("JWT_SECRET_KEY=" + secrets.token_urlsafe(32))

# =============================================================================
# ПРИМЕРЫ ДЛЯ РАЗНЫХ СРЕД
# =============================================================================

# РАЗРАБОТКА (development):
# - DATABASE_TYPE=sqlite
# - DEBUG=True
# - MAIL_SERVER=localhost (для тестирования)

# ПРОДАКШН (production):
# - DATABASE_TYPE=postgresql
# - DEBUG=False
# - Все секретные ключи должны быть уникальными
# - Настроить реальный SMTP сервер
# - Установить REDIS_PASSWORD

# ТЕСТИРОВАНИЕ (testing):
# - DATABASE_PATH=:memory:
# - TESTING=True
# - REDIS_DB=1 (отдельная база для тестов)
